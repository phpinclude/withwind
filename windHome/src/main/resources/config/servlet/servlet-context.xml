<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kr.pe.withwind.spring" />


	<!-- AOP 관련설정 참고 URL : http://private.tistory.com/43?category=655784 잘나왔다. -->
	<aop:aspectj-autoproxy/>
	
<!-- 	<beans:bean id="aopTest" class="kr.pe.withwind.spring.aop.AopTestByXml" /> -->
	
<!-- 	<aop:config> -->
<!-- 	    aspect id는 logger이고, aopTest를 참조함 -->
<!-- 	    <aop:aspect id="logger" ref="aopTest"> -->
<!-- 	        pointcut(핵심 기능)의 id는 publicM이고, kr.pe.withwind.spring 패키지에 있는 모든 클래스에 공통 기능을 적용 -->
<!-- 	        <aop:pointcut id="publicM" expression="within(kr.pe.withwind.spring.*)"/> -->
<!-- 	        loggerAop()라는 공통 기능을 publicM라는 pointcut에 적용 -->
<!-- 	        <aop:around pointcut-ref="publicM" method="loggerAop"/> -->
<!-- 	        <aop:before pointcut-ref="publicM" method="before"/> -->
<!-- 	        <aop:after  pointcut-ref="publicM" method="after"/> -->
<!-- 	    </aop:aspect> -->
<!-- 	</aop:config> -->
	
<!-- 	<beans:bean id="testClass" class="kr.pe.withwind.spring.TestClass"/> -->


</beans:beans>
